name: Test & deploy

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

# Kill already running jobs after a new push
concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  node-version: "18.17.0"

jobs:
  lint:
    name: Lint with Prettier
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout pull request (${{ github.head_ref }})
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          persist-credentials: false

      - name: Checkout main branch
        uses: actions/checkout@v3
        if: github.ref == 'refs/heads/main'
        with:
          persist-credentials: false

      - name: Fail on forbidden words
        uses: simpleanalytics/fail-on-found-action@v2
        with:
          query: "console.log"
          exclude: 'node_modules,.git,.indexOf(",.indexOf('''

      - name: Prettier Action on PR
        if: github.event_name == 'pull_request'
        uses: creyD/prettier_action@v4.3
        with:
          prettier_version: "2.6.2"
          prettier_options: "--write {,!(static|.github)/**/}*.{js,vue,html,json,md,yml,css,scss}"
          commit_message: "Run prettier via GitHub Action"
          file_pattern: "."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prettier Action on main
        if: github.ref == 'refs/heads/main'
        uses: creyD/prettier_action@v4.3
        with:
          prettier_version: "2.6.2"
          prettier_options: "--write {,!(static|.github)/**/}*.{js,vue,html,json,md,yml,css,scss}"
          commit_message: "Run prettier via GitHub Action"
          file_pattern: "."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/simpleanalytics/marketing-site:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "BUILD_REV=${{ github.sha }}"
          secrets: |
            "github_pat=${{ secrets.MARKETING_SITE_PERSONAL_ACCESS_TOKEN }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy
        env:
          DEPLOY_SSH_KEY: "${{ secrets.DEPLOY_SSH_KEY }}"
          # If server changes keys, update this variable with "ssh-keyscan cms.simpleanalytics.com | grep ed25519"
          # Saving the server public key protects against MITM attacks.
          KNOWN_HOSTS: "simpleanalytics.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBRvG5ld8OWPVR/7/PpsG46QwKXff6wA72VMySgFZ0JG"
        run: |
          mkdir -p ~/.ssh
          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts
          echo "$DEPLOY_SSH_KEY" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          ssh -i /tmp/ssh_key -T app@simpleanalytics.com
